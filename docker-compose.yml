
services:

  auth_service:
    build:
      context: .  
      dockerfile: Dockerfile
    ports:
      - "8083:8083" 
      - "9090:9090"
    env_file:
      - .env
    environment:
      - DB_DSN=${DSN}
      - REDIS_PORT=${REDIS_PORT}
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - redis  
    networks:
      - app-base-server_app-network



  redis:
    image: redis:7.4-alpine  
    restart: unless-stopped
    ports:
      - "6381:6379"
    networks:
      - app-base-server_app-network
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - redis_data:/data

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOST=redis
    ports:
      - "8099:8080"
    depends_on:
      - redis 
    restart:
      unless-stopped



  asynqmon:
    image: hibiken/asynqmon:latest
    ports:
      - "8098:8080"
    environment:
      - REDIS_ADDR=redis:6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-base-server_app-network


volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-base-server_app-network:
    external: true
